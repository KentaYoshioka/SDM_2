<h1>TAシフト割当画面</h1>

<h2>科目情報</h2>
<body>
    <table class="table-container" style="width: 50%">
      <thead>
        <tr>
            <th>年度</th>
            <th>学期</th>
            <th>科目番号</th>
            <th>授業科目名</th>
            <th>担当教員</th>
        </tr>
      </thead>
      <tbody>
		 <% course = @course %>
        <tr>
            <td style="text-align: right;"><%= course.year%></td>
            <td style="text-align: right;"><%= course.term%></td>
            <td><%= course.number%></td>
            <td><%= course.name%></td>
            <td><%= course.instructor%></td>
        </tr>
      </tbody>
    </table>

<table class="table-container" style="width: 50%" >
      <thead>
        <tr>
            <th>TA割当可能総時間</th>
            <th>割当済時間</th>
            <th>備考</th>
        </tr>
      </thead>
      <tbody>
		 <% course = @course %>
        <tr>
            <td style="text-align: right;"><%= course.time_budget%></td>
            <td style="text-align: right;">0</td>
            <td style="width: 60%"><%= course.description%></td>
        </tr>
      </tbody>
    </table>


</body>

<h2>TA</h2>
<% if @assigned_teaching_assistant.present? %>
  <table class="table-container" style="width: 50%" >
  <thead>
    <tr>
        <th>学生番号</th>
        <th>氏名</th>
    </tr>
  </thead>
  <tbody>
  <% assignment_TA = @assigned_teaching_assistant %>
    <% @assigned_teaching_assistant.each do |assignment_TA| %>
      <tr>
        <td style="text-align: right;"><%= assignment_TA.number %></td>
        <td><%= assignment_TA.name %></td>
      </tr>
    <% end %>
  </tbody>
  </table>
<% end %>
<div class="button-container">
<button id="button1" class="button-blue">TA追加</button>
<button id="button2" class="button-red">TA削除</button>
</div>



<div id="displayText"></div>

<div id="SearchFormContainer">
  <form id="SearchForm" style="display:none;" >
    <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
    <label for="number">学生番号:</label>
    <input type="text" id="number" name="number" >

    <label for="name">氏名:</label>
    <input type="text" id="name" name="name">
    <button type="button" id = "SearchButton" >検索</button>
  </form>
</div>
<div id="SearchResult"></div>
<form id="resultform" action="/add_TA" method="POST" style="display:none;">
  <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
  <%= hidden_field_tag :course_id, @course.id %>
  <div id="tableContainer"></div>
  <div id="messageContainer_sub"></div>
  <button type="submit">確定</button>
</form>




<form id="delete_TA" action="/delete_TA" method="POST" style="display:none;">
  <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
  <div class="message">削除する学生を選択してください</div>
  <table class="table-container" style="width: 50%">
    <thead>
      <tr>
        <th>選択</th>
        <th>学生番号</th>
        <th>氏名</th>
      </tr>
    </thead>
    <tbody>
      <% @assigned_teaching_assistant.each do |item| %>
        <tr>
          <td><%= check_box_tag 'selected_items[]', item.id %></td>
          <td><%= item.number %></td>
          <td><%= item.name %></td>
        </tr>
      <% end %>
    </tbody>
  </table>
  <div id="messageContainer_1"></div>
  <button type="submit">確定</button>
</form>

<h2>勤務時間</h2>
<% if @work_hour.present? %>
  <table class="table-container" style="width: 50%">
  <thead>
    <tr>
        <th>開始時刻</th>
        <th>終了時刻</th>
        <th>実動時間</th>
    </tr>
  </thead>
  <tbody>
  <% work_hours = @work_hour %>
    <% work_hours.each do |work_hour| %>
      <tr>
        <td><%= work_hour.start_time.strftime('%Y年%m月%d日 %H:%M') %></td>
        <td><%= work_hour.end_time.strftime('%Y年%m月%d日 %H:%M') %></td>
        <td><%= work_hour.work_time %></td>
      </tr>
    <% end %>
  </tbody>
  </table>
<% end %>

<div class="button-container">
<button id="button3" class="button-blue">勤務時間追加</button>
<button id="button4" class="button-red">勤務時間削除</button>
</div>
<div id="SearchFormContainer">
  <form id="work_form" action="/add_work_time" method="POST" style="display:none;">
    <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
    <%= hidden_field_tag :course_id, @course.id %>
    <label for="date">勤務日</label>
    <input type="text" id="date" name="date" readonly>

    <label for="start">開始時刻</label>
    <input type="text" id="start" name="start" readonly>　〜

    <label for="finish">終了時刻</label>
    <input type="text" id="finish" name="finish" readonly>

    <label for="work_time">実動時間(分)</label>
    <input type="text" id="work_time" name="work_time">

    <button type="submit" id="work_add">追加</button>
  </form>
</div>

<form id="delete_work_time" action="/delete_work_time" method="POST" style="display:none;">
  <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
  <div class="message">削除する勤務時間を選択してください</div>
  <table class="table-container" style="width: 50%">
    <thead>
      <tr>
        <th>選択</th>
        <th>開始時刻</th>
        <th>終了時刻</th>
        <th>実動時間</th>
      </tr>
    </thead>
    <tbody>
      <% @work_hour.each do |item| %>
        <tr>
          <td><%= check_box_tag 'selected_items[]', item.id %></td>
          <td><%= item.start_time %></td>
          <td><%= item.end_time %></td>
          <td><%= item.work_time %></td>
        </tr>
      <% end %>
    </tbody>
  </table>
  <div id="messageContainer_2"></div>
  <button type="submit">確定</button>
</form>


<h2>シフト</h2>
<% if @complete_assignment.present? %>
  <table class="table-container" style="width: 80%">
  <thead>
    <tr>
        <th>学生番号</th>
        <th>氏名</th>
        <th>開始時刻</th>
        <th>終了時刻</th>
        <th>実動時間(分)</th>
    </tr>
  </thead>
  <tbody>
  <% complete_assignment = @complete_assignment %>
    <% complete_assignment.each do |assign| %>
      <tr>
        <td><%= assign.assignment.teaching_assistant.number %></td>
        <td><%= assign.assignment.teaching_assistant.name %></td>
        <td><%= assign.start_time.strftime('%Y年%m月%d日 %H:%M') %></td>
        <td><%= assign.end_time.strftime('%Y年%m月%d日 %H:%M') %></td>
        <td><%= assign.work_time %></td>
      </tr>
    <% end %>
  </tbody>
  </table>
<% end %>
<div class="button-container">
<button id = 'button5' class="button-blue" class="centered-text">シフト追加</button>
<button id = 'button6' class="button-red" class="centered-text">シフト削除</button>
</div>
<div id="SearchFormContainer">
  <form id="add_assignment" action="/add_assignment" method="POST" style="display:none;">
    <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
    <%= hidden_field_tag :course_id, @course.id %>

    <label for="teaching_assistant_id">TA:</label>
   <%= select_tag :teaching_assistant_id, options_for_select(@assigned_teaching_assistant.pluck(:id, :name, :number).map { |id, name, number| ["#{name} （#{number}）", id] }) %>

  <label for="work_hour_id">勤務時間:</label>
    <%= select_tag :work_hour_id, options_for_select(@work_hour.pluck(:id, :start_time, :end_time, :work_time).map { |id, start_time, end_time, work_time| ["#{start_time.strftime('%Y年%m月%d日 %H:%M')} ~ #{end_time.strftime('%Y年%m月%d日 %H:%M')} (#{work_time})", id] }) %>

    <button type="submit" >確定</button>
  </form>
</div>

<form id="delete_assignment" action="/delete_assgnment" method="POST" style="display:none;">
  <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
  <div class="message">削除するシフトを選択してください</div>

  <table class="table-container" style="width: 50%">
    <thead>
      <tr>
        <th>選択</th>
        <th>学生番号</th>
        <th>氏名</th>
        <th>開始時刻</th>
        <th>終了時刻</th>
        <th>実動時間(分)</th>
      </tr>
    </thead>
    <tbody>
      <% @complete_assignment.each do |assign| %>
        <tr>
          <td><%= check_box_tag 'selected_items[]', assign.id %></td>
          <td><%= assign.assignment.teaching_assistant.number %></td>
          <td><%= assign.assignment.teaching_assistant.name %></td>
          <td><%= assign.start_time.strftime('%Y年%m月%d日 %H:%M') %></td>
          <td><%= assign.end_time.strftime('%Y年%m月%d日 %H:%M') %></td>
          <td><%= assign.work_time %></td>
        </tr>
      <% end %>
    </tbody>
  </table>
  <div id="messageContainer_3"></div>
  <button type="submit">確定</button>
</form>

<p><%= link_to '科目一覧画面', '/courses/index' %></p>
<p><%= link_to '帳票表示画面', '/show_reports/index' %></p>


<script src="https://cdn.jsdelivr.net/npm/flatpickr@4.6.9/dist/flatpickr.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr@4.6.9/dist/flatpickr.min.css">
<script>
  const button1 = document.getElementById('button1');
  const button2 = document.getElementById('button2');
  const button3 = document.getElementById('button3');
  const button4 = document.getElementById('button4');
  const button5 = document.getElementById('button5');
  const button6 = document.getElementById('button6');
  const deleteForm = document.getElementById('delete_TA');
  const myForm = document.getElementById('SearchForm');
  const work_form = document.getElementById('work_form');
  const delete_assignment = document.getElementById('delete_assignment');
  const add_assignment = document.getElementById('add_assignment');
  const SearchButton = document.getElementById('SearchButton');

  button1.addEventListener('click', function() {
    SearchForm.style.display = 'block';
    deleteForm.style.display = 'none';
  });

  button2.addEventListener('click', function() {
    deleteForm.style.display = 'block';
    SearchForm.style.display = 'none';
  });

  button3.addEventListener('click', function() {
    work_form.style.display = 'block';
    delete_work_time.style.display = 'none';
  });

  button4.addEventListener('click', function() {
    delete_work_time.style.display = 'block';
    work_form.style.display = 'none';
  });

  button5.addEventListener('click', function() {
    add_assignment.style.display = 'block';
  });

  button6.addEventListener('click', function() {
    delete_assignment.style.display = 'block';
  });

  SearchButton.addEventListener('click', function() {
    resultform.style.display = 'block';
    const formData = new FormData(myForm);
    for (const [key, value] of formData){
      const formData = new FormData(myForm);
      httpGet(formData);
    }
  });


/********************************************************エラーメッセージ出力関数*******************************************************/
function errorMessage(formId, messageContainerId, errorMessage) {
  var form = document.getElementById(formId);

  form.addEventListener('submit', function(event) {
    event.preventDefault(); // フォームのデフォルトの送信をキャンセル

    var selectedItems = Array.from(document.querySelectorAll('input[name="selected_items[]"]:checked'))
      .map(function(checkbox) {
        return checkbox.value;
      });

    if (selectedItems.length === 0) {
      var errorDiv = document.getElementById(messageContainerId).querySelector('.error-message');
      if (!errorDiv) {
        errorDiv = document.createElement("div");
        errorDiv.textContent = errorMessage;
        errorDiv.classList.add("error-message");
        document.getElementById(messageContainerId).appendChild(errorDiv);
      }
    } else {
      var formData = new FormData(this);

      var xhr = new XMLHttpRequest();
      xhr.onreadystatechange = function() {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) {
            // レスポンスが成功した場合の処理...
            location.reload(); // ページをリロードして結果を表示するなどの処理を行う
          } else if (xhr.status === 422) {
            var response = JSON.parse(xhr.responseText);
            if (response.hasOwnProperty('error')) {
              var errorDiv = document.getElementById(messageContainerId).querySelector('.error-message');
              if (!errorDiv) {
                errorDiv = document.createElement("div");
                errorDiv.classList.add("error-message");
                document.getElementById(messageContainerId).appendChild(errorDiv);
              }
              errorDiv.textContent = response.error;
            }
          }
        }
      };

      xhr.open('POST', this.action);
      xhr.setRequestHeader('X-CSRF-Token', '<%= form_authenticity_token %>');
      xhr.send(formData);
    }
  });
}
/**********************************************************************************************************************/
// 使用例
// errorMessage(アクション名，ID，出力するメッセージ)
errorMessage("delete_TA", "messageContainer_1", "削除するTAが選択されていません．");
errorMessage("delete_work_time", "messageContainer_2", "削除する勤務時間が選択されていません．");
errorMessage("delete_assgnment", "messageContainer_3", "削除するシフトが選択されていません．");




function httpGet(query) {
  var xmlHttp = new XMLHttpRequest();
  xmlHttp.onreadystatechange = function() {
    if (xmlHttp.readyState == 4) {
      if (xmlHttp.status == 200) {
        table(xmlHttp.responseText);
        resultform.style.display = 'block';
      } else if (xmlHttp.status == 422) {
        var response = JSON.parse(xmlHttp.responseText);
        if (response.hasOwnProperty('error')) {
          var container = document.getElementById("tableContainer");
          container.innerHTML = '<div class="error-message">' + response.error + '</div>';;
        }
      }
    }
  };
  xmlHttp.open("POST", "/search");
  xmlHttp.send(query);
}




function dom(id, content){
    document.getElementById(id).innerHTML = content;
}

function table(jsonData) {
let TA = JSON.parse(jsonData);
var table = document.createElement("table");
table.classList.add("scrollable-table"); // テーブルにクラスを追加

var headerRow = table.insertRow();
var headerCell = headerRow.insertCell();
headerCell = headerRow.insertCell();
headerCell.textContent = "学生番号";
headerCell.classList.add("scrollable-table"); // ヘッダーセルにクラスを追加
headerCell = headerRow.insertCell();
headerCell.classList.add("scrollable-table"); // ヘッダーセルにクラスを追加
headerCell.textContent = "名前";

var tbody = document.createElement("tbody");
for (var i = 0; i < TA.length; i++) {
  var row = table.insertRow();
  var checkboxCell = row.insertCell();
  var checkbox = document.createElement("input");
  checkbox.type = "checkbox";
  checkbox.name = "selected_options[]";
  checkbox.value = TA[i].id;
  checkboxCell.appendChild(checkbox);
  checkbox.classList.add("scrollable-table"); // データセルにクラスを追加

  var nameCell = row.insertCell();
  nameCell.textContent = TA[i].number;
  nameCell = row.insertCell();
  nameCell.textContent = TA[i].name;
  nameCell.classList.add("scrollable-table"); // データセルにクラスを追加
}

var tableWrapper = document.createElement("div");
tableWrapper.classList.add("scrollable-table-wrapper");
tableWrapper.appendChild(table);

var container = document.getElementById("tableContainer");
container.innerHTML = "";
container.appendChild(tableWrapper);
}


  flatpickr("#date", {
    dateFormat: "Y-m-d",
  });

  flatpickr("#start", {
    enableTime: true,
    noCalendar: true,
    dateFormat: "H:i",
    time_24hr: true,
  });

  flatpickr("#finish", {
    enableTime: true,
    noCalendar: true,
    dateFormat: "H:i",
    time_24hr: true,
  });
</script>
